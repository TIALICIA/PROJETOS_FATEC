CREATE TABLE autor (
id_autor SERIAL PRIMARY KEY,
nome VARCHAR(100) NOT NULL
);

CREATE TABLE livro (
id_livro SERIAL PRIMARY KEY,
titulo VARCHAR(150) NOT NULL,
ano_publicacao INT,
id_autor INT REFERENCES autor(id_autor)
);

CREATE TABLE aluno (
id_aluno SERIAL PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
curso VARCHAR(100) NOT NULL
);

CREATE TABLE emprestimo (
    id_emprestimo SERIAL PRIMARY KEY,
    data_emprestismo DATE NOT NULL,
    id_aluno INT,
    CONSTRAINT fk_aluno 
        FOREIGN KEY (id_aluno)
        REFERENCES aluno (id_aluno)
);

INSERT INTO emprestimo (data_emprestismo, id_aluno) VALUES
('2025-08-20', 1),
('2025-08-21', 2);


CREATE TABLE emprestimo_livro (
    id_emprestimo INT,
    id_livro INT,
    PRIMARY KEY (id_emprestimo, id_livro),
    FOREIGN KEY (id_emprestimo) REFERENCES emprestimo(id_emprestimo),
    FOREIGN KEY (id_livro) REFERENCES livro(id_livro)
);

INSERT INTO autor (nome) VALUES
('J. R. R. Tolkien'),
('Machado de Assis'),
('Clarice Lispector');

INSERT INTO livro (titulo, ano_publicacao,
id_autor) VALUES
('O Senhor dos Anéis', 1954, 1),
('Dom Casmurro', 1899, 2),
('A Hora da Estrela', 1977, 3),
('O Hobbit', 1937, 1);

INSERT INTO aluno (nome, curso) VALUES
('Ana Souza', 'Sistemas de Informação'),
('Bruno Silva', 'Engenharia de Software');

INSERT INTO emprestimo (data_emprestismo,
id_aluno) VALUES
('2025-08-20', 1),
('2025-08-21', 2);

INSERT INTO emprestimo_livro (id_emprestimo, id_livro) VALUES
(1, 1),
(1, 2),
(2, 3);

SELECT a.nome AS autor, COUNT(l.id_livro) AS total_livros
FROM autor a
INNER JOIN livro l ON a.id_autor = l.id_autor
GROUP BY a.nome
ORDER BY total_livros DESC;

CREATE TABLE editora (
    id_editora SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    cidade VARCHAR(100),
    estado VARCHAR(2)
);

ALTER TABLE livro
ADD COLUMN id_editora INT,
ADD CONSTRAINT fk_editora FOREIGN KEY (id_editora) REFERENCES editora(id_editora);

INSERT INTO editora (nome, cidade, estado) VALUES
('Companhia das Letras', 'São Paulo', 'SP'),
('Editora Record', 'Rio de Janeiro', 'RJ'),
('HarperCollins Brasil', 'São Paulo', 'SP');

-- O Senhor dos Anéis → HarperCollins (id 3)
-- Dom Casmurro → Editora Record (id 2)
-- A Hora da Estrela → Companhia das Letras (id 1)
-- O Hobbit → HarperCollins (id 3)

UPDATE livro SET id_editora = 3 WHERE titulo = 'O Senhor dos Anéis';
UPDATE livro SET id_editora = 2 WHERE titulo = 'Dom Casmurro';
UPDATE livro SET id_editora = 1 WHERE titulo = 'A Hora da Estrela';
UPDATE livro SET id_editora = 3 WHERE titulo = 'O Hobbit';


SELECT l.titulo, a.nome AS autor, e.nome AS editora
FROM livro l
JOIN autor a ON l.id_autor = a.id_autor
LEFT JOIN editora e ON l.id_editora = e.id_editora;

SELECT e.nome AS editora, COUNT(l.id_livro) AS total_livros
FROM editora e
INNER JOIN livro l ON e.id_editora = l.id_editora
GROUP BY e.id_editora, e.nome
HAVING COUNT(l.id_livro) > 5;

SELECT 
    a.nome AS autor,
    e.nome AS editora,
    COUNT(l.id_livro) AS total_livros
FROM livro l
JOIN autor a ON l.id_autor = a.id_autor
JOIN editora e ON l.id_editora = e.id_editora
GROUP BY a.nome, e.nome
ORDER BY a.nome, e.nome;

ALTER TABLE livro ADD COLUMN num_paginas INT;

UPDATE livro SET num_paginas = 1170 WHERE titulo = 'O Senhor dos Anéis';
UPDATE livro SET num_paginas = 256 WHERE titulo = 'Dom Casmurro';
UPDATE livro SET num_paginas = 96  WHERE titulo = 'A Hora da Estrela';
UPDATE livro SET num_paginas = 310 WHERE titulo = 'O Hobbit';

SELECT 
    a.nome AS autor,
    ROUND(AVG(l.num_paginas), 2) AS media_paginas
FROM livro l
JOIN autor a ON l.id_autor = a.id_autor
GROUP BY a.nome
ORDER BY a.nome;

